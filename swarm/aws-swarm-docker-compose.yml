# OpenRemote v3
#
# By default running this profile installs the stack in swarm on https://localhost using a
# self-signed SSL certificate, with username 'admin' and password 'secret'.
#
# Install Docker Community edition (https://docker.com/) on Windows, macOS, or Linux.
#
# Start a demo stack in the project root directory with:
#
#   dosker swarm init
#   docker pull openremote/deployment
#   docker-compose -p demo up -d --no-build deployment 
#   docker stack deploy --compose-file docker-compose-swarm.yml demo
#
# Stop the stack:
#
#   docker stack rm demo
#
# For full documentation, see profile/deploy.yml
#
# For swarm (production) use version 3, for developement use version 2 
version: '3.7'

networks:
  public:
    driver: overlay
    driver_opts:
      encrypted: 'true'
  private:
    driver: overlay
    driver_opts:
      encrypted: 'true'
    attachable: false

# If you enable volume mappings in services, you need this. Otherwise, remove the volumes
volumes:
  postgresql-data:

services:

  manager:

    image: openremote/manager-swarm:${DATE_TAG:-latest}
    networks:
      - private
      - public
    depends_on:
      - keycloak

    environment:

      TZ: Europe/Amsterdam

      # If developer mode is enabled, all setup tasks will be executed on application startup.
      # This will clean all data in the database, and then import demo/test data. Some caching and
      # other runtime performance-optimizations will also be disabled.
      DEV_MODE: ${DEV_MODE:-false}

      # This switch can wipe your database, this is the factory reset!
      SETUP_WIPE_CLEAN_INSTALL: ${SETUP_WIPE_CLEAN_INSTALL:-true}
      SETUP_ADMIN_PASSWORD: ${SETUP_ADMIN_PASSWORD:-secret}

      # When you are ready to permanently install your project, replace it with the next lines...
      # SETUP_WIPE_CLEAN_INSTALL: # Allow override on CLI

      # Configure SMTP smart host, to send password reset emails etc.
      #SETUP_EMAIL_HOST: smtp-host.demo.tld
      #SETUP_EMAIL_USER: 'smtp-user'
      #SETUP_EMAIL_PASSWORD: 'smtp-password'
      #SETUP_EMAIL_PORT: 25
      #SETUP_EMAIL_TLS: 'true'
      #SETUP_EMAIL_FROM_KEYCLOAK: 'no-reply@openremote.io'
      #SETUP_EMAIL_FROM_DEFAULT: 'no-reply@openremote.io'

      # The public URL of the proxy in front of this manager; must match the proxy#DOMAINNAME (unfortunately
      # docker compose doesn't support chaining environment variables at time of writing, hence the need for
      # two environment variables)
      EXTERNAL_URL: ${EXTERNAL_URL:-https://localhost}

      # The service-internal host name and port of the identity provider.
      KEYCLOAK_HOST: keycloak
      KEYCLOAK_PORT: 8080

      JAVA_OPTS: -Xms400m -Xmx400m
                  -XX:CompressedClassSpaceSize=25m -XX:MaxMetaspaceSize=150m
                  -XX:InitialCodeCacheSize=50m -XX:ReservedCodeCacheSize=50m
                  -XX:MaxDirectMemorySize=25m
                  -XX:NativeMemoryTracking=summary
                  -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/javadump.core.hprof

    ports:
      - "8080:8080"

    deploy:
      replicas: 1
      # Configure uninterupted updates with rollback
      update_config:
        failure_action: rollback
        order: start-first

  keycloak:

    # Image will be pulled when using the `docker-compose pull` command or `docker-compose up --no-build`
    image: openremote/keycloak:${DATE_TAG:-latest}
    networks:
      - public
      - private
    depends_on:
      - postgresql
      
    environment:

      # It is important that all services have the same timezone and are time synchronized.
      # Bearer tokens are only valid for minutes, and authentication fails if Keycloak drifts.
      TZ: Europe/Amsterdam

      # Switch to DEBUG to diagnose Keycloak problems.
      KEYCLOAK_LOGLEVEL: INFO

      # When you are ready to permanently install your project, replace it with the next line ...
      # SETUP_ADMIN_PASSWORD: # Allow override on CLI

      # CHANGE THIS PASSWORD BEFORE STARTING THE STACK! THIS IS ONLY FOR DEMO!
      KEYCLOAK_PASSWORD: ${SETUP_ADMIN_PASSWORD:-secret}

      # Custom JVM options (increase heap size if required)
      JAVA_OPTS: -Xms300m -Xmx300m
                  -XX:CompressedClassSpaceSize=25m -XX:MaxMetaspaceSize=200m
                  -XX:InitialCodeCacheSize=50m -XX:ReservedCodeCacheSize=50m
                  -XX:MaxDirectMemorySize=25m
                  -XX:NativeMemoryTracking=summary
                  -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/javadump.core.hprof
                  -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true

    ports:
      - "8081:8080"

    deploy:
      replicas: 1
      # Configure uninterupted updates with rollback
      update_config:
        failure_action: rollback
        order: start-first

  # This configuration stores postgresql data in a Docker volume. You manage this volume
  # independently from your stack with with 'docker volume ls', 'docker volume rm', etc.
  # Alternatively, you can store postgresql data in a directory on your host.
  postgresql:
    # Image will be pulled when using the `docker-compose pull` command or `docker-compose up --no-build`
    image: openremote/postgresql:${DATE_TAG:-latest}
    networks:
      - private
      
    environment:

      # It is important that all services have the same timezone and are time synchronized.
      # Bearer tokens are only valid for minutes, and authentication fails if Keycloak drifts.
      TZ: Europe/Amsterdam

      # You can open an SQL console on a running container with:
      # docker exec -it <container ID> psql -U openremote

    volumes:
      - postgresql-data:/deployment

    deploy:
      replicas: 1
      # Configure uninterupted updates with rollback
      update_config:
        failure_action: rollback
        order: start-first
