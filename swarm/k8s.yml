apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../kube-docker-compose.yml convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: keycloak
  name: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: keycloak
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../kube-docker-compose.yml convert
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: keycloak
    spec:
      containers:
      - env:
        - name: DB_ADDR
          value: postgresql
        - name: DB_DATABASE
          value: openremote
        - name: DB_PASSWORD
          value: CHANGE_ME_DB_USER_PASSWORD
        - name: DB_PORT
          value: "5432"
        - name: DB_SCHEMA
          value: public
        - name: DB_USER
          value: openremote
        - name: DB_VENDOR
          value: postgres
        - name: JAVA_OPTS
          value: -Xms300m -Xmx300m -XX:CompressedClassSpaceSize=25m -XX:MaxMetaspaceSize=200m
            -XX:InitialCodeCacheSize=50m -XX:ReservedCodeCacheSize=50m -XX:MaxDirectMemorySize=25m
            -XX:NativeMemoryTracking=summary -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/javadump.core.hprof
            -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman
            -Djava.awt.headless=true
        - name: KEYCLOAK_LOGLEVEL
          value: INFO
        - name: KEYCLOAK_PASSWORD
          value: secret
        - name: KEYCLOAK_USER
          value: admin
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: TZ
          value: Europe/Amsterdam
        image: openremote/keycloak:latest
        imagePullPolicy: ""
        name: keycloak
        ports:
        - containerPort: 8080
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../kube-docker-compose.yml convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: keycloak
  name: keycloak
spec:
  ports:
  - name: "8081"
    port: 8081
    targetPort: 8080
  selector:
    io.kompose.service: keycloak
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../kube-docker-compose.yml convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: manager
  name: manager
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: manager
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../kube-docker-compose.yml convert
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: manager
    spec:
      containers:
      - env:
        - name: APP_DEFAULT
          value: manager
        - name: DATABASE_CONNECTION_TIMEOUT_SECONDS
          value: "300"
        - name: DATABASE_CONNECTION_URL
          value: jdbc:postgresql://postgresql/openremote
        - name: DATABASE_MAX_POOL_SIZE
          value: "20"
        - name: DATABASE_MIN_POOL_SIZE
          value: "5"
        - name: DATABASE_PASSWORD
          value: CHANGE_ME_DB_USER_PASSWORD
        - name: DATABASE_USERNAME
          value: openremote
        - name: DEV_MODE
          value: "false"
        - name: IDENTITY_NETWORK_HOST
          value: localhost
        - name: IDENTITY_NETWORK_SECURE
          value: "true"
        - name: IDENTITY_NETWORK_WEBSERVER_PORT
          value: "443"
        - name: JAVA_OPTS
          value: -Xms400m -Xmx400m -XX:CompressedClassSpaceSize=25m -XX:MaxMetaspaceSize=150m
            -XX:InitialCodeCacheSize=50m -XX:ReservedCodeCacheSize=50m -XX:MaxDirectMemorySize=25m
            -XX:NativeMemoryTracking=summary -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/javadump.core.hprof
        - name: KEYCLOAK_HOST
          value: keycloak
        - name: KEYCLOAK_PORT
          value: "8080"
        - name: MASTER_REALM_KEYCLOAK_THEME
          value: openremote
        - name: SETUP_ADMIN_PASSWORD
          value: secret
        - name: SETUP_IMPORT_DEMO_AGENT
          value: "true"
        - name: SETUP_IMPORT_DEMO_AGENT_KNX
          value: "false"
        - name: SETUP_IMPORT_DEMO_AGENT_VELBUS
          value: "false"
        - name: SETUP_IMPORT_DEMO_ASSETS
          value: "true"
        - name: SETUP_IMPORT_DEMO_RULES
          value: "true"
        - name: SETUP_IMPORT_DEMO_SCENES
          value: "true"
        - name: SETUP_IMPORT_DEMO_USERS
          value: "true"
        - name: SETUP_WIPE_CLEAN_INSTALL
          value: "true"
        - name: TZ
          value: Europe/Amsterdam
        - name: WEBSERVER_LISTEN_HOST
          value: 0.0.0.0
        image: openremote/manager-swarm:latest
        imagePullPolicy: ""
        name: manager
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: postgresql-data
  name: postgresql-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../kube-docker-compose.yml convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: postgresql
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../kube-docker-compose.yml convert
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: postgresql
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: openremote
        - name: POSTGRES_PASSWORD
          value: CHANGE_ME_DB_USER_PASSWORD
        - name: POSTGRES_USER
          value: openremote
        - name: TZ
          value: Europe/Amsterdam
        image: openremote/postgresql:latest
        imagePullPolicy: ""
        name: postgresql
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresql-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql-data
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: proxy-data
  name: proxy-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../kube-docker-compose.yml convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: proxy
  name: proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: proxy
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../kube-docker-compose.yml convert
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: proxy
    spec:
      containers:
      - args:
        - run
        env:
        - name: DOMAINNAME
          value: localhost
        - name: LE_EMAIL
          value: me@privacy.net
        - name: TZ
          value: Europe/Amsterdam
        image: openremote/proxy:latest
        imagePullPolicy: ""
        name: proxy
        ports:
        - containerPort: 80
        - containerPort: 443
        resources: {}
        volumeMounts:
        - mountPath: /deployment
          name: proxy-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: proxy-data
        persistentVolumeClaim:
          claimName: proxy-data
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../kube-docker-compose.yml convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: proxy
  name: proxy
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  - name: "443"
    port: 443
    targetPort: 443
  selector:
    io.kompose.service: proxy
status:
  loadBalancer: {}
