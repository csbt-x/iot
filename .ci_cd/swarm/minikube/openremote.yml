apiVersion: v1
kind: Namespace
metadata:
  name: openremote
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: openremote
  name: postgresql-data
  namespace: openremote
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: openremote
  name: proxy-data
  namespace: openremote
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: openremote
spec:
  type: NodePort
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 30000
  selector:
    app: openremote
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: openremote
spec:
  ports:
    - port: 8080
  selector:
    app: openremote
---
apiVersion: v1
kind: Service
metadata:
  name: manager
  namespace: openremote
spec:
  ports:
    - port: 8080
  selector:
    app: openremote
---
apiVersion: v1
kind: Service
metadata:
  name: proxy
  namespace: openremote
spec:
  ports:
    - port: 80
      name: "80"
    - port: 443
      name: "443"
  selector:
    app: openremote
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: openremote
  name: postgresql
  namespace: openremote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openremote
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: openremote
    spec:
      containers:
      - image: openremote/postgresql:latest
        name: postgresql
        env:
        - name: TZ
          value: Europe/Amsterdam
        ports:
        - containerPort: 5432
          name: postgresql
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresql-data
      restartPolicy: Always
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: openremote
  name: keycloak
  namespace: openremote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openremote
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: openremote
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Xms300m -Xmx300m -XX:CompressedClassSpaceSize=25m -XX:MaxMetaspaceSize=200m
            -XX:InitialCodeCacheSize=50m -XX:ReservedCodeCacheSize=50m -XX:MaxDirectMemorySize=25m
            -XX:NativeMemoryTracking=summary -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/javadump.core.hprof
            -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman
            -Djava.awt.headless=true
        - name: KEYCLOAK_LOGLEVEL
          value: INFO
        - name: KEYCLOAK_PASSWORD
          value: secret
        - name: KEYCLOAK_USER
          value: admin
        - name: TZ
          value: Europe/Amsterdam
        image: openremote/keycloak:latest
        imagePullPolicy: ""
        name: keycloak
        ports:
        - containerPort: 8080
          name: keycloak
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: openremote
  name: manager
  namespace: openremote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openremote
  template:
    metadata:
      labels:
        app: openremote
    spec:
      containers:
      - env:
        - name: EXTERNAL_URL
          value: https://localhost
        - name: JAVA_OPTS
          value: -Xms400m -Xmx400m -XX:CompressedClassSpaceSize=25m -XX:MaxMetaspaceSize=150m
            -XX:InitialCodeCacheSize=50m -XX:ReservedCodeCacheSize=50m -XX:MaxDirectMemorySize=25m
            -XX:NativeMemoryTracking=summary -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/javadump.core.hprof
        - name: KEYCLOAK_HOST
          value: keycloak
        - name: KEYCLOAK_PORT
          value: "8080"
        - name: SETUP_ADMIN_PASSWORD
          value: secret
        - name: SETUP_WIPE_CLEAN_INSTALL
          value: "true"
        - name: TZ
          value: Europe/Amsterdam
        image: openremote/manager-swarm:latest
        imagePullPolicy: ""
        name: manager
        resources: {}
      restartPolicy: Always
