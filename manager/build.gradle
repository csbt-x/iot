apply plugin: "java-library"
apply plugin: "application"
apply plugin: "distribution"

mainClassName = "org.openremote.manager.Main"

dependencies {

    api resolveProject(":container")
    api resolveProject(":agent")
    api resolveProject(":model")

    implementation "org.xerial:sqlite-jdbc:$sqliteVersion"

    implementation "org.mnode.ical4j:ical4j:$ical4jVersion"

    implementation "net.jafama:jafama:$jafamaVersion"
    implementation "org.geotools:gt-main:$geotoolsVersion"
    implementation "com.google.firebase:firebase-admin:$firebaseAdminVersion"
    implementation "org.simplejavamail:simple-java-mail:$simpleJavaMailVersion"
    implementation "io.swagger.core.v3:swagger-jaxrs2:$swaggerVersion"
    implementation "org.openjdk.nashorn:nashorn-core:$nashornVersion"

    implementation ("io.netty:netty-codec-http:$nettyVersion") {
        force = true
    }

    implementation ("io.moquette:moquette-broker:$moquetteVersion") {
        exclude module: "slf4j-log4j12" // Don't want log4J
    }

    implementation("org.quartz-scheduler:quartz:$quartzVersion") {
        exclude group: "c3p0"
    }
}

// Load version properties file and use same version as source code
def props = new Properties()
file("src/main/resources/system.properties").withInputStream { props.load(it) }
version = props.get("version")

jar {
    archivesBaseName = "openremote-${project.name}"
}

distributions {
    main {
        contents {
            from(project.projectDir) {
                include("*Dockerfile")
            }
            into ("web") {
                from("${projectDir}/src/web")
            }
            into ("map") {
                from("${projectDir}/src/map")
            }
        }
    }
}
