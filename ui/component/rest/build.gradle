buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "cz.habarta.typescript-generator:typescript-generator-gradle-plugin:$typescriptGeneratorVersion"
    }
}

plugins {
    id 'groovy'
    id 'cz.habarta.typescript-generator'
}

dependencies {
    compileOnly findProject(":model-util")
    implementation resolveProject(":model")
    implementation resolveProject(":agent")
    implementation "cz.habarta.typescript-generator:typescript-generator-core:$typescriptGeneratorVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"
}

project.task(Collections.singletonMap(Task.TASK_TYPE, cz.habarta.typescript.generator.gradle.GenerateTask), "generateTypescriptModelInfo")
generateTypescriptModelInfo createTSGeneratorConfigForModel("$buildDir/model.ts")

generateTypeScript createTSGeneratorConfigForClient("src/restclient.ts")
generateTypeScript.dependsOn generateTypescriptModelInfo

clean {
    doLast {
        def dir = new File("${projectDir}/dist")
        dir.deleteDir()
    }
}

build.dependsOn generateTypeScript, npmBuild
npmBuild.dependsOn generateTypeScript

task prepareUi() {
    dependsOn clean, build, npmPrepare
}

task publishUi() {
    dependsOn clean, build, npmPublish
}
